<?php


require_once "includes/tripal_network.schema.inc";
require_once "includes/tripal_network.fields.inc";
require_once "api/tripal_network.api.inc";
require_once "includes/tripal_network.viewer.inc";
require_once "includes/tripal_network.neighborhood_viewer.inc";
require_once "includes/tripal_network.entity.inc";
require_once "includes/TripalNetwork.inc";
require_once "includes/TripalNetworkViewer.inc";
require_once "includes/TripalNetworkViewerPlotly.inc";
require_once "includes/TripalNetworkLayout.inc";
require_once "includes/TripalNetworkLayoutFA2.inc";
require_once "includes/TripalNetworkLayoutRandom.inc";

/**
 * Implements hook_permission().
 *
 * Set the permission types that the chado module uses.  Essentially we
 *  want permissionis that protect creation, editing and deleting of chado
 *  data objects
 *
 * @ingroup tripal
 */
function tripal_network_permission() {
  return [];
}

/**
 * Implements hook_menu()
 *
 * Specifies menu items and URLs used by this module.
 *
 * @ingroup tripal_network
 */
function tripal_network_menu() {
  $items = [];

  /*
   * Module Search Form
   */
  $term = tripal_load_term_entity(['vocabulary' => 'NCIT', 'accession' => 'C61377']);
  $bundle = tripal_load_bundle_entity(['term_id' => $term->id]);


  $items['networks/viewer'] = [
    'page callback' => 'tripal_network_viewer_page',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/retrieve'] = [
    'page callback' => 'tripal_network_viewer_ajax_retrieve',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/init'] = [
    'page callback' => 'tripal_network_viewer_ajax_init',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/update/layers'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_layers_form',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/update/filter'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_filter_form',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/update/nodedata'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_node_data_form',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/update/edgedata'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_edge_data_form',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/details/node'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_node_details',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/details/edge'] = [
    'page callback' => 'tripal_network_viewer_ajax_get_edge_details',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];
  $items['networks/viewer/neighborhood/retrieve'] = [
    'page callback' => 'tripal_network_neighborhood_viewer_ajax_retrieve',
    'page arguments' => [],
    'access arguments' => ['view ' . $bundle->name],
    'file' => '/includes/tripal_network.viewer.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_CALLBACK,
  ];

  // All extension modules should have an administrative menu item
  // with the path set to 'admin/tripal/extension/[module name]'.
  $items['admin/tripal/extension/network'] = [
    'title' => 'Biological Networks',
    'description' => 'Manage biological networks made available by this site.',
    'page callback' => 'tripal_network_admin_home',
    'access arguments' => ['administer tripal_network'],
    'file' => '/includes/tripal_network.admin.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['admin/tripal/extension/network/overview'] = [
    'title' => 'Overview',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  ];
  $items['admin/tripal/extension/network/help'] = [
    'title' => 'Help',
    'description' => 'Documentation for the Tripal Network module..',
    'page callback' => 'tripal_network_admin_help',
    'access arguments' => ['administer tripal_network'],
    'type' => MENU_LOCAL_TASK,
    'file' => '/includes/tripal_network.graphML_loader.inc',
    'file path' => drupal_get_path('module','tripal_network'),
    'weight' => 2,
  ];

  return $items;
}


/**
 * Implements hook_views_api()
 *
 * This hook tells drupal that there is views support for
 * for this module which then automatically includes the tripal_db.views.inc
 * where all the views integration code is found.
 *
 * @ingroup tripal_network
 */
function tripal_network_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 *  Implements hook_theme()
 *
 * @ingroup tripal_network
 */
function tripal_network_theme($existing, $type, $theme, $path) {

  $items = array(
    // HTML AND PAGE THEMES
    'html__networks__viewer' => array(
      'template' => 'html--networks--viewer',
      'render element' => 'html',
      'base hook' => 'html',
      'path' => drupal_get_path('module', 'tripal_network') . "/theme/templates",
    ),
    'page__networks__viewer' => array(
      'template' => 'page--networks--viewer',
      'render element' => 'page',
      'base hook' => 'page',
      'path' => drupal_get_path('module', 'tripal_network') . "/theme/templates",
    ),
    'tripal_network_viewer' => array(
      'template' => 'tripal_network_viewer',
      'variables' =>  [],
      'path' => drupal_get_path('module', 'tripal_network') . "/theme/templates",
    ),
    'tripal_network_viewer_property' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'tripal_network') . "/includes/tripal_network.viewer.inc",
    ),
    'tripal_network_viewer_filter_form_list' => array(
      'function' => 'theme_tripal_network_viewer_filter_form_list',
      'render element' => 'element',
      'file' => 'includes/tripal_network.viewer.inc',
    ),
  );
  return $items;
}


/**
 * Implements hook_help()
 *
 * Adds a help $formpage to the module list
 */
function tripal_network_help ($path, $arg) {

  // EXPLANATION: in the tripal_network_menu() function above we created
  // a menu item for the help documentation.  The menu item specified
  // a function that should be called when the menu item is clicked.  This
  // is that function.  But, rather than place HTML code in this function
  // we want to have our help documentation in a template galaxy.  We
  // specified in the tripal_network.theme() function that we have a template
  // galaxy so now we want to use get the contents of that template galaxy and
  // return it.
  if ($path == 'admin/help#tripal_network') {
    return theme('tripal_network_help', []);
  }
}


/**
 * Impelmentation of hook_ajax_render_alter().
 *
 * This function allows us to add new command to the ajax callback when
 * it returns.  This way we can call Javascript functions directly from our
 * PHP code.
 *
 * @param $commands
 */
function tripal_network_ajax_render_alter(&$commands) {

  // always update the sidebar on every ajax return.
  if(array_key_exists('tripal-network-ajax-commands', $_SESSION)) {
    foreach ($_SESSION['tripal-network-ajax-commands'] as $command) {
      $commands[] = $command;
    }
    unset($_SESSION['tripal-network-ajax-commands']);
  }
}

/**
 * A helper function for adding new command to ajax calls.
 *
 * When we want to call a function in JavaScript we use this function to
 * add new "commands".  These commands are added to the ajax response by
 * the tripal_network_ajax_render_alter() function before the AJAX is
 * returned. This function stores all of the commands that are requested
 * until that AJAX call is returned.
 *
 * @param $commands
 *   A single Drupal compatible ajax command created by calling
 *   ajax_command_invoke().
 */
function tripal_network_add_ajax_command($command) {
  if(!array_key_exists('tripal-network-ajax-commands', $_SESSION)) {
    $_SESSION['tripal-network-ajax-commands'] = [];
  }
  $_SESSION['tripal-network-ajax-commands'][] = $command;
}

