<?php

/**
 *
 */
function tripal_network_install() {

  // Add the new Chado tables.
  $schema = [];
  
  // Tables for storing compounds
  tripal_network_add_compound_table($schema);
  tripal_network_add_compoundprop_table($schema);
  tripal_network_add_compound_dbxref_table($schema);
  tripal_network_add_compound_synonymn_table($schema);
  
  // Tables for storing reactions
  tripal_network_add_reaction_table($schema);
  tripal_network_add_reactionprop_table($schema);
  tripal_network_add_reaction_substrate_table($schema);
  tripal_network_add_reaction_product_table($schema);
  
  // Tables for storing pathways
  tripal_network_add_pathway_table($schema);
  tripal_network_add_pathwayprop_table($schema);
  tripal_network_add_pathway_dbxref_table($schema);
  tripal_network_add_pathway_reaction_table($schema);
  tripal_network_add_pathway_feature_table($schema);

  // Tables for storing the network.
  tripal_network_add_network_table($schema);
  tripal_network_add_networkprop_table($schema);
  tripal_network_add_network_attr_table($schema);
  tripal_network_add_network_attrprop_table($schema);
  tripal_network_add_network_cvterm_table($schema);
  tripal_network_add_network_file_table($schema);

  // Tables for storing the network nodes.
  tripal_network_add_network_node_table($schema);
  tripal_network_add_network_nodeprop_table($schema);
  tripal_network_add_network_feature_table($schema);
  tripal_network_add_network_compound_table($schema);

  // Tables for storing network edges.
  tripal_network_add_network_edge_table($schema);
  tripal_network_add_network_edgeprop_table($schema);
  
  // Linker tables for the network.
  tripal_network_add_network_analysis_table($schema);
  tripal_network_add_network_analysisprop_table($schema);
  tripal_network_add_network_pub_table($schema);

  // Layout information for the networks.
  tripal_network_add_network_layout_table($schema);
  

  foreach ($schema as $table_name => $table_schema){
    chado_create_custom_table($table_name, $table_schema, TRUE, NULL, FALSE);
  }

  tripal_network_add_terms();
  tripal_network_setup_semweb();
  tripal_network_add_content_types();

  tripal_network_add_bulk_loader();
}

/**
 *
 */
function tripal_network_add_bulk_loader() {

  $template = stripslashes('[{"table":"organism","record_id":"Organism","mode":"select_once","fields":[{"type":"constant","title":"Genus","field":"genus","required":1,"constant value":"","exposed":1,"exposed_validate":1},{"type":"constant","title":"Species","field":"species","required":1,"constant value":"","exposed":1,"exposed_validate":1}]},{"table":"cv","record_id":"Feature Type CV","mode":"select_once","fields":[{"type":"constant","title":"CV Name","field":"name","required":1,"constant value":"sequence","exposed":0,"exposed_validate":1}]},{"table":"cvterm","record_id":"Feature Type CVTerm","mode":"select_once","fields":[{"type":"constant","title":"Feature Term (e.g. gene, mRNA, protein)","field":"name","required":1,"constant value":"","exposed":1,"exposed_validate":1}]},{"table":"feature","record_id":"Feature","mode":"select","fields":[{"type":"table field","title":"Feature Name","field":"name","required":1,"spreadsheet column":"1","exposed":0,"exposed_description":""},{"type":"foreign key","title":"Feature Organism","field":"organism_id","show_all_records":0,"foreign key":"Organism","foreign field":"organism_id","required":1},{"type":"foreign key","title":"Feature type","field":"type_id","show_all_records":0,"foreign key":"Feature Type CVTerm","foreign field":"cvterm_id","required":1}],"select_if_duplicate":0,"update_if_duplicate":0,"select_optional":1,"disable":0,"optional":0},{"table":"db","record_id":"Term DB","mode":"insert","fields":[{"type":"table field","title":"Term DB Name","field":"name","required":1,"spreadsheet column":"5","exposed":0,"exposed_description":""}],"select_if_duplicate":1,"update_if_duplicate":0,"select_optional":0,"disable":0,"optional":0},{"table":"cv","record_id":"Term CV","mode":"insert","fields":[{"type":"table field","title":"Term CV Name","field":"name","required":1,"spreadsheet column":"4","exposed":0,"exposed_description":""}],"select_if_duplicate":1,"update_if_duplicate":0,"select_optional":0,"disable":0,"optional":0},{"table":"dbxref","record_id":"Term DBxref","mode":"insert","fields":[{"type":"table field","title":"Term Accession","field":"accession","required":1,"spreadsheet column":"2","exposed":0,"exposed_description":"","regex":{"pattern":["\/w+:(w+)\/"],"replace":["1"]}},{"type":"foreign key","title":"Term DB ID","field":"db_id","show_all_records":0,"foreign key":"Term DB","foreign field":"db_id","required":1}],"select_if_duplicate":1,"update_if_duplicate":0,"select_optional":0,"disable":0,"optional":0},{"table":"cvterm","record_id":"Term CVTerm","mode":"insert","fields":[{"type":"table field","title":"Term Definition","field":"definition","required":0,"spreadsheet column":"6","exposed":0,"exposed_description":""},{"type":"foreign key","title":"Term DBXref ID","field":"dbxref_id","show_all_records":0,"foreign key":"Term DBxref","foreign field":"dbxref_id","required":1},{"type":"table field","title":"Term Name","field":"name","required":1,"spreadsheet column":"3","exposed":0,"exposed_description":""},{"type":"foreign key","title":"Term CV","field":"cv_id","show_all_records":0,"foreign key":"Term CV","foreign field":"cv_id","required":1}],"select_if_duplicate":1,"update_if_duplicate":0,"select_optional":0,"disable":0,"optional":0},{"table":"pub","record_id":"Publication","mode":"select_once","fields":[{"type":"constant","title":"","field":"uniquename","required":1,"constant value":"null","exposed":0,"exposed_validate":0}]},{"table":"feature_cvterm","record_id":"Feature CVTerm","mode":"insert","fields":[{"type":"foreign key","title":"Feature CVTerm","field":"cvterm_id","show_all_records":0,"foreign key":"Term CVTerm","foreign field":"cvterm_id","required":1},{"type":"foreign key","title":"Feature","field":"feature_id","show_all_records":0,"foreign key":"Feature","foreign field":"feature_id","required":1},{"type":"foreign key","title":"Pub","field":"pub_id","show_all_records":0,"foreign key":"Publication","foreign field":"pub_id","required":1}],"select_if_duplicate":1,"update_if_duplicate":0,"select_optional":0,"disable":0,"optional":0}]');

  // If the template doesn't already exist then add it.
  $template_id = db_select('tripal_bulk_loader_template', 'tblt')
    ->fields('tblt',['template_id'])
    ->condition('name', 'Tripal Network: Gene Functional Annotations Importer', '=')
    ->execute()
    ->fetchField();
  if (!$template_id) {
    $options = [
      'template_name' => 'Tripal Network: Gene Functional Annotations Importer',
      'template_array' => $template,
    ];
    $errors = [];
    $warnings = [];
    tripal_insert_bulk_loader_template($options, $errors, $warnings);
  }
}

/**
 *
 */
function tripal_network_add_terms() {
  tripal_insert_db([
    'name' => 'NCIT',
    'description' => 'NCI Thesaurus OBO Edition',
    'url' => 'https://github.com/NCI-Thesaurus/thesaurus-obo-edition',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('NCIT','The NCIt OBO Edition project aims to increase integration of the NCIt with OBO Library ontologies. NCIt is a reference terminology that includes broad coverage of the cancer domain, including cancer related diseases, findings and abnormalities. NCIt OBO Edition releases should be considered experimental.');

  tripal_insert_db([
    'name' => 'XCO',
    'description' => 'Experimental condition ontology',
    'url' => 'http://purl.obolibrary.org/obo/xco.owl',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('XCO','Conditions under which physiological and morphological measurements are made both in the clinic and in studies involving humans or model organisms.');


  tripal_insert_db([
    'name' => 'INO',
    'description' => 'INO: Interaction Network Ontology',
    'url' => 'https://github.com/INO-ontology/ino',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('INO','The Interaction Network Ontology (INO) is an ontology in the domain of interactions and interaction networks. INO represents general and species-neutral types of interactions and interaction networks, and their related elements and relations. INO is a community-driven ontology, aligns with BFO, and is developed by following the OBO Foundry principles.');

  tripal_insert_db([
    'name' => 'OBCS',
    'description' => 'Ontology of Biological and Clinical Statistics',
    'url' => 'https://github.com/obcs/obcs',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('OBCS','OBCS stands for the Ontology of Biological and Clinical Statistics. OBCS is an ontology in the domain of biological and clinical statistics. It is aligned with the Basic Formal Ontology (BFO) and the Ontology for Biomedical Investigations (OBI). OBCS imports all possible biostatistics terms in OBI and includes many additional biostatistics terms, some of which were proposed and discussed in the OBI face-to-face workshop in Ann Arbor in 2012.');


  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C61377',
    'name' => 'Network',
    'cv_name' => 'NCIT',
    'definition' => 'An interconnected system of things or people.',
  ]);

  // Graph properties
  $term = tripal_insert_cvterm([
    'id' => 'OBCS:0000198',
    'name' => 'undirected graph',
    'cv_name' => 'OBCS',
    'definition' => 'A mathematic graph that a set of objects (vertices or nodes) that are connected together, where all the edges between two objects are bidirectional.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'OBCS:0000212',
    'name' => 'directed graph',
    'cv_name' => 'OBCS',
    'definition' => 'A mathematic graph that a set of objects (vertices or nodes) that are connected together, where all the edges are directed from one object to another. A directed graph is sometimes called a digraph or a directed network.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:node_count',
    'name' => 'Node count',
    'cv_name' => 'local',
    'definition' => 'The number of nodes in a graph.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:edge_count',
    'name' => 'Edge count',
    'cv_name' => 'local',
    'definition' => 'The number of edges in a graph.',
  ]);

  // Network Parts
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C75914',
    'name' => 'Mathematical Graph',
    'cv_name' => 'NCIT',
    'definition' => 'A set of objects called points, nodes, or vertices connected by a binary relation between vertices called lines or edges. It is a mathematical structure used to model pairwise relations between objects from a certain collection. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C62289',
    'name' => 'Domain',
    'cv_name' => 'NCIT',
    'definition' => 'An area of knowledge considered as a discreet unit for some purpose. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C75907',
    'name' => 'Graph Node',
    'cv_name' => 'NCIT',
    'definition' => 'One of the points that define a graph.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C75923',
    'name' => 'Graph Edge',
    'cv_name' => 'NCIT',
    'definition' => 'A connection between nodes in a graph.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C43418',
    'name' => 'Cluster',
    'cv_name' => 'NCIT',
    'definition' => 'A grouping of a number of similar things.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'OBI:0200126',
    'name' => 'network graph construction',
    'cv_name' => 'obi',
    'definition' => 'A network analysis in which an input data set describing objects and relationships between objects is transformed into an output representation of these objects as nodes and the relationships as edges of a network graph.',
  ]);

  // Analysis  Types
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C63918',
    'name' => 'Cluster Analysis',
    'cv_name' => 'NCIT',
    'definition' => 'Methods for grouping objects into subsets such that those within each cluster are more closely related to one another than objects assigned to different clusters. [ NCI ]',
  ]);

  //
  // Add terms for KINC GraphML properties.
  //
  $term = tripal_insert_cvterm([
    'id' => 'SWO:0000425',
    'name' => 'Similarity score',
    'cv_name' => 'SWO',
    'definition' => 'Similarity score',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C44185',
    'name' => 'P-Value',
    'cv_name' => 'NCIT',
    'definition' => 'A measure of the probability that a result happened by chance. The lower the p-value, the more likely it is that the result was caused by phenomenon of interest. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C85542',
    'name' => 'R Squared',
    'cv_name' => 'NCIT',
    'definition' => 'The goodness of fit statistic for the terminal elimination phase. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'XCO:0000000',
    'name' => 'experimental condition',
    'cv_name' => 'XCO',
    'definition' => 'A state of being, an external or environmental factor or a treatment observed or administered prior to or concurrent with an investigative procedure such as an assessment of a morphological or physiological state or property in a single individual or sample or in a group of individuals or samples, especially a state, factor or treatment which has the potential to influence the outcome of such an assessment. [ Multiple_Dictionaries:http://www.thefreedictionary.com/ http://www.ncbi.nlm.nih.gov/pubmed/22654893 ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C48904',
    'name' => 'Rank',
    'cv_name' => 'NCIT',
    'definition' => 'A relative status as compared to others within a group. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_sample_string',
    'name' => 'KINC sample string',
    'cv_name' => 'local',
    'definition' => 'A sequence of digits representing the contribution that each sample has made to a KINC derived cluster that forms an edge in the network.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_cluster_index',
    'name' => 'KINC cluster index',
    'cv_name' => 'local',
    'definition' => 'The index of the cluster identified by Gaussian Mixuture Models (GMM) when using the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_cluster_size',
    'name' => 'KINC cluster size',
    'cv_name' => 'local',
    'definition' => 'The size of the cluster identified by Gaussian Mixuture Models (GMM) when using the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_sample_string',
    'name' => 'KINC Sample String',
    'cv_name' => 'local',
    'definition' => 'A sequence of digits representing the contribution that each sample has made to a KINC derived cluster that forms an edge in the network.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_pvalue',
    'name' => 'KINC association p-value',
    'cv_name' => 'local',
    'definition' => 'The p-value obtained from the KINC software during association testing of the experimental context with the network edge.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_rsquared',
    'name' => 'KINC association r-squared',
    'cv_name' => 'local',
    'definition' => 'The R squared value obtained from the KINC software from linear regression during the assocation testing of the experimental context with the network edge.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_WAnova_Max',
    'name' => 'KINC Welch\'s one-way ANOVA maximum p-value',
    'cv_name' => 'local',
    'definition' => 'The maximum p-value obtained from the Welch\'s one-way ANOVA when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_WAnova_Min',
    'name' => 'KINC Welch\'s one-way ANOVA minimum p-value',
    'cv_name' => 'local',
    'definition' => 'The minimum p-value obtained from the Welch\'s one-way ANOVA when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_Missing_Ttest',
    'name' => 'KINC t-test of missigness p-value',
    'cv_name' => 'local',
    'definition' => 'The p-value obtained from the t-test for similar missing expression patterns when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_test_name',
    'name' => 'KINC test name',
    'cv_name' => 'local',
    'definition' => 'The name of the variable (or category) used by the KINC software for testing if an edge is associated with the variable.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'INO:0000002',
    'name' => 'interaction',
    'cv_name' => 'INO',
    'definition' => 'Interaction is a processual entity that has two or more participants (i.e., interactors) that have an effect upon one another.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000400',
    'name' => 'x cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An x cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000401',
    'name' => 'y cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An y cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000402',
    'name' => 'z cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An z cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000614',
    'name' => 'attribute',
    'cv_name' => 'SIO',
    'definition' => 'An attribute is a characteristic of some entity.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C25161',
    'name' => 'Classification',
    'cv_name' => 'NCIT',
    'definition' => 'A method of generalization, the systematic arrangement of entities into classes or groups based on mutual similarity and certain differing characteristics. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C142192',
    'name' => 'Study Variable',
    'cv_name' => 'NCIT',
    'definition' => 'A variable identified as relevant to a particular clinical study. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C142658',
    'name' => 'Quantitative Variable',
    'cv_name' => 'NCIT',
    'definition' => 'A variable that can be expressed with numeric values. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C142657',
    'name' => 'Qualitative Variable',
    'cv_name' => 'NCIT',
    'definition' => 'Variables that cannot be represent by a number, used to describe data that fits into categories. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C47797',
    'name' => 'Ordinal Scale',
    'cv_name' => 'NCIT',
    'definition' => 'A scale that uses ordered numbers where the difference between successive designations may not be constant. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C25570',
    'name' => 'Minimum',
    'cv_name' => 'NCIT',
    'definition' => 'The smallest possible quantity. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C25564',
    'name' => 'Maximum',
    'cv_name' => 'NCIT',
    'definition' => 'The largest possible quantity or degree. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C44185',
    'name' => 'P-Value',
    'cv_name' => 'NCIT',
    'definition' => 'A measure of the probability that a result happened by chance. The lower the p-value, the more likely it is that the result was caused by phenomenon of interest. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C48192',
    'name' => 'Importance Weight',
    'cv_name' => 'NCIT',
    'definition' => 'The relative importance granted to something. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C114464',
    'name' => 'Category Name',
    'cv_name' => 'NCIT',
    'definition' => 'The designation for a collection of related, classified entities. [ NCI ]',
  ]);

  // Data Types
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C42645',
    'name' => 'Data Type',
    'cv_name' => 'SIO',
    'definition' => 'An indication of the form that a value will have. Examples include string, integer, and character. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C45255',
    'name' => 'Integer',
    'cv_name' => 'NCIT',
    'definition' => 'A number with no fractional part, including the negative and positive numbers as well as zero. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C48150',
    'name' => 'Float',
    'cv_name' => 'NCIT',
    'definition' => 'A number that can have its decimal point in any position. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C45253',
    'name' => 'String',
    'cv_name' => 'NCIT',
    'definition' => 'An expression consisting of a linear sequence of symbols (characters or words or phrases). [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C44272',
    'name' => 'Annotation',
    'cv_name' => 'NCIT',
    'definition' => 'An explanatory or critical comment, or other in-context information (e.g., pattern, motif, link), that has been associated with data or other types of information. [ NCI ]',
  ]);


  // Network Analysis Types
  $term = tripal_insert_cvterm([
    'id' => 'operation:3766',
    'name' => 'Weighted gene co-expression network analysis',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'A data mining method typically used for studying biological networks based on pairwise correlations between variables.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'operation:3094',
    'name' => 'Protein interaction network prediction',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'Predict a network of protein interactions.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'operation:2437',
    'name' => 'Gene regulatory network prediction',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'Predict a network of gene regulation.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:csGCN',
    'name' => 'Context-specific gene co-expression network',
    'cv_name' => 'local',
    'definition' => 'An approach for creating gene co-expression network using context.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:GCN',
    'name' => 'Gene co-expression network.',
    'cv_name' => 'local',
    'definition' => 'Pairwise correlation of gene expression, thresholded, in network form.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:MCN',
    'name' => 'Metabolite correlation network.',
    'cv_name' => 'local',
    'definition' => 'Pairwise correlation of metabolite abundance, thresholded, in network form.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'OBI:0200130',
    'name' => 'node degree calculation',
    'cv_name' => 'obi',
    'definition' => 'A node quality calculation in which an input data set describing object nodes and relationship edges between object nodes is used to enumerate the number of unique relationships of an individual object node.',
  ]);



  // Terms for fields
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000931',
    'name' => 'network diagram',
    'cv_name' => 'SIO',
    'definition' => 'A network diagram consists of a set of vertices connected by edges.',
  ]);


  // Terms for files
  $term = tripal_insert_cvterm([
    'id' => 'local:GraphML',
    'name' => 'GraphML file',
    'cv_name' => 'local',
    'definition' => 'The XML-based file format for storing graphs (i.e., networks).',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'data:3112',
    'name' => 'Gene Expression Matrix',
    'cv_name' => 'EDAM',
    'definition' => 'The final processed (normalised) data for a set of hybridisations in a microarray experiment.',
  ]);


  // Set default property terms
  variable_set('tripal_network_graphml_mapper', [
    'g_name' => [
      'term' => 'schema:name',
      'type' => 'annotation'
    ],
    'g_uname' => [
      'term' => 'data:0842',
      'type' => 'annotation'
    ],
    'v_name' => [
      'term' => 'schema:name',
      'type' => 'annotation'
    ],
    'v_degree' => [
      'term' => 'OBI:0200130',
      'type' => 'quantitative'
    ],
    'v_x' => [
      'term' => 'SIO:000400',
      'type' => 'quantitative'
    ],
    'v_y' => [
      'term' => 'SIO:000401',
      'type' => 'quantitative'
    ],
    'v_z' => [
      'term' => 'SIO:000402',
      'type' => 'quantitative'
    ],
    'e_Similarity_Score' => [
      'term' => 'SWO:0000425',
      'type' => 'quantitative'
    ],
    'e_Interaction' =>  [
      'term' => 'INO:0000002',
      'type' => 'categorical'
    ],
    'e_Cluster_Index' => [
      'term' => 'local:KINC_cluster_index',
      'type' => 'quantitative'
    ],
    'e_Cluster_Size' => [
      'term' => 'local:KINC_cluster_size',
      'type' => 'quantitative'
    ],
    'e_Samples' => [
      'term' => 'local:KINC_sample_string',
      'type' => 'annotation'
    ],
    'e_Test_Name' => [
      'term' => 'local:KINC_test_name',
      'type' => 'categorical'
    ],
    'e_p_value' => [
      'term' => 'local:KINC_pvalue',
      'type' => 'quantitative'
    ],
    'e_r_squared' => [
      'term' => 'local:KINC_rsquared',
      'type' => 'quantitative'
    ],
    'e_rank' => [
      'term' => 'NCIT:C48904',
      'type' => 'quantitative'
    ],
    'e_WAnova_Max' => [
      'term' => 'local:KINC_WAnova_Max',
      'type' => 'quantitative'
    ],
    'e_WAnova_Min'  => [
      'term' => 'local:KINC_WAnova_Min',
      'type' => 'quantitative'
    ],
    'e_MissingTtest' => [
      'term' => 'local:KINC_Missing_Ttest',
      'type' => 'quantitative'
    ],
  ]);

}


/**
 *
 */
function tripal_network_setup_semweb() {

  // TODO: finish adding in term mapping.

  // Add controlled vocabulary terms to the new tables.
  $identifier = tripal_get_cvterm(['id' => 'data:0842']);
  tripal_associate_chado_semweb_term('network', 'uniquename', $identifier);

  $name = tripal_get_cvterm(['id' => 'schema:name']);
  tripal_associate_chado_semweb_term('network', 'name', $name);

  $organism = tripal_get_cvterm(['id' => 'OBI:0100026']);
  tripal_associate_chado_semweb_term('network', 'organism_id', $organism);

  $type = tripal_get_cvterm(['id' => 'schema:additionalType']);
  tripal_associate_chado_semweb_term('network', 'type_id', $type);

  // The network_attr table.
  $type = tripal_get_cvterm(['id' => 'NCIT:C61377']);
  tripal_associate_chado_semweb_term('network_attr', 'network_id', $type);

  $type = tripal_get_cvterm(['id' => 'NCIT:C62289']);
  tripal_associate_chado_semweb_term('network_attr', 'domain_id', $type);

  $type = tripal_get_cvterm(['id' => 'schema:name']);
  tripal_associate_chado_semweb_term('network_attr', 'attr_id', $type);

}
/**
 *
 * @throws Exception
 */
function tripal_network_add_content_types() {
  // Create the 'Network diagram' entity type.
  $error = '';
  $args = [
    'vocabulary' => 'NCIT',
    'accession' => 'C61377',
    'term_name' => 'Network',
    'storage_args' => [
      'data_table' => 'network',
    ]
  ];
  $term = tripal_load_term_entity(['vocabulary' => 'NCIT', 'accession' => 'C61377']);
  if ($term) {
    $bundle = tripal_load_bundle_entity(['term_id' => $term->id]);
  }
  if (!$term or !$bundle) {
    if (!tripal_create_bundle($args, $error)) {
      $msg = (isset($error['!message'])) ? $error['!message'] : 'Error Encountered creating "Network" Tripal Content Type.';
      throw new Exception($msg);
    }
  }
}

/**
 *
 */
function tripal_network_add_network_table(&$schema) {

  $schema['network'] = [
    'table' => 'network',
    'fields' => [
      'network_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text',
      ],
      'organism_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['network_id'],
    'indexes' => [
      'network_idx1' => [
        0 => 'organism_id',
      ],
      'network_idx2' => [
        0 => 'type_id',
      ],
      'network_idx4' => [
        0 => 'uniquename',
      ],
      'network_name_ind1' => [
        0 => 'name',
      ],
    ],
    'unique keys' => [
      'network_c1' => [
        0 => 'organism_id',
        1 => 'uniquename',
        2 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'organism' => [
        'table' => 'organism',
        'columns' => [
          'organism_id' => 'organism_id',
        ],
      ],
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
    ],
    'referring_tables' => [
      'network_edge',
      'network_node',
      'networkprop'
    ],
  ];
}
/**
 *
 */
function tripal_network_add_networkprop_table(&$schema) {

  $schema['networkprop'] = [
    'table' => 'networkprop',
    'fields' => [
      'networkprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'networkprop_id',
    ],
    'unique keys' => [
      'networkprop_c1' => [
        0 => 'network_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'networkprop_idx1' => [
        0 => 'network_id',
      ],
      'networkprop_idx2' => [
        0 => 'type_id',
      ],
      'networkprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}

/**
 *
 */
function tripal_network_add_network_attr_table(&$schema) {

  $schema['network_attr'] = [
    'table' => 'network_attr',
    'fields' => [
      'network_attr_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'domain_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Indicates the domain for this attribute: graph, edge or node.  This ID should be for the controlled vocabulary term for one of those domains.'
      ],
      'attr_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The ID of the controlled vocabulary term for the attribute.'

      ],
    ],
    'primary key' => [
      0 => 'network_attr_id',
    ],
    'unique keys' => [
      'network_attr_c1' => [
        0 => 'network_id',
        1 => 'domain_id',
        2 => 'attr_id',
      ],
    ],
    'indexes' => [
      'network_attr_idx1' => [
        0 => 'network_id',
      ],
      'network_attr_idx2' => [
        0 => 'attr_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'domain_id' => 'cvterm_id',
          'attr_id' => 'cvterm_id'
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_attrprop_table(&$schema) {

  $schema['network_attrprop'] = [
    'table' => 'network_attrprop',
    'fields' => [
      'network_attrprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_attr_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_attrprop_id',
    ],
    'unique keys' => [
      'network_attrprop_c1' => [
        0 => 'network_attr_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_attrprop_idx1' => [
        0 => 'network_attr_id',
      ],
      'network_attrpro_idx2' => [
        0 => 'type_id',
      ],
      'network_attrpro_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'network_attr' => [
        'table' => 'network_attr',
        'columns' => [
          'network_attr_id' => 'network_attr_id',
        ],
      ],
    ],
  ];
}

function tripal_network_add_network_layout_table(&$schema) {
  $schema['network_layout'] = [
    'table' => 'network_layout',
    'fields' => [
      'network_layout_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'x_coord' => [
        'type' => 'float',
        'not null' => TRUE
      ],
      'y_coord' => [
        'type' => 'float',
        'not null' => TRUE
      ],
    ],
    'primary key' => ['network_layout_id'],
    'indexes' => [
      'network_node_idx1' => [
        0 => 'network_id',
      ],
      'network_node_idx2' => [
        0 => 'feature_id',
      ],
      'network_node_idx3' => [
        0 => 'network_id',
        1 => 'feature_id',
      ],
    ],
    'unique keys' => [
      'network_node_c1' => [
        0 => 'network_id',
        1 => 'feature_id',
      ],
    ],
    'foreign keys' => [
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
      'feature' => [
        'table' => 'feature',
        'columns' => [
          'feature_id' => 'feature_id',
        ],
      ],
    ],
  ];
}

function tripal_network_add_network_feature_table(&$schema) {
  $schema['network_feature'] = [
    'table' => 'network_feature',
    'fields' => [
      'network_feature_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_node_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE
      ],
    ],
    'primary key' => ['network_node_id'],
    'indexes' => [
      'network_feature_idx1' => [
        0 => 'network_node_id',
      ],
      'network_feature_idx2' => [
        0 => 'feature_id',
      ],
      'network_feature_idx3' => [
        0 => 'network_node_id',
        1 => 'feature_id',
      ],
    ],
    'unique keys' => [
      'network_feature_c1' => [
        0 => 'network_node_id',
        1 => 'feature_id',
      ],
    ],
    'foreign keys' => [
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'network_node_id' => 'network_node_id',
        ],
      ],
      'feature' => [
        'table' => 'feature',
        'columns' => [
          'feature_id' => 'feature_id',
        ],
      ],
    ],
  ];
}

function tripal_network_add_network_compound_table(&$schema) {
  $schema['network_compound'] = [
    'table' => 'network_compound',
    'fields' => [
      'network_compound_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_node_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE
      ],
    ],
    'primary key' => ['network_compound_id'],
    'indexes' => [
      'network_compound_idx1' => [
        0 => 'network_node_id',
      ],
      'network_compound_idx2' => [
        0 => 'compound_id',
      ],
      'network_compound_idx3' => [
        0 => 'network_node_id',
        1 => 'compound_id',
      ],
    ],
    'unique keys' => [
      'network_compound_c1' => [
        0 => 'network_node_id',
        1 => 'compound_id',
      ],
    ],
    'foreign keys' => [
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'network_node_id' => 'network_node_id',
        ],
      ],
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_node_table(&$schema) {

  $schema['network_node'] = [
    'table' => 'network_node',
    'fields' => [
      'network_node_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text'
      ]
    ],
    'primary key' => ['network_node_id'],
    'indexes' => [
      'network_node_idx1' => [
        0 => 'network_id',
      ],
      'network_node_idx3' => [
        0 => 'network_id',
        1 => 'name',
      ],
    ],
    'unique keys' => [
      'network_node_c1' => [
        0 => 'network_id',
        1 => 'name',
      ],
    ],
    'foreign keys' => [
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],      
    ],
    'referring_tables' => [
      0 => 'network_nodeprop',
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_nodeprop_table(&$schema) {
  $schema['network_nodeprop'] = [
    'table' => 'network_nodeprop',
    'fields' => [
      'network_nodeprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_node_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_nodeprop_id',
    ],
    'unique keys' => [
      'network_nodeprop_c1' => [
        0 => 'network_node_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_nodeprop_idx1' => [
        0 => 'network_node_id',
      ],
      'network_nodeprop_idx2' => [
        0 => 'type_id',
      ],
      'network_nodeprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'network_node_id' => 'network_node_id',
        ],
      ],
    ],
  ];
}

/**
 *
 */
function tripal_network_add_network_edge_table(&$schema) {
  $schema['network_edge'] = [
    'table' => 'network_edge',
    'fields' => [
      'network_edge_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'source_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'target_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
    ],
    'primary key' => ['network_edge_id'],
    'indexes' => [
      'network_edge_idx1' => [
        0 => 'network_id',
      ],
      'network_edge_idx2' => [
        0 => 'source_id',
      ],
      'network_edge_idx3' => [
        0 => 'target_id',
      ],
      'network_edge_idx4' => [
        0 => 'source_id',
        1 => 'target_id',
      ],
      'network_edge_idx5' => [
        0 => 'network_id',
        1 => 'source_id',
        2 => 'target_id',
      ],
    ],
    'foreign keys' => [
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'source_id' => 'network_node_id',
          'target_id' => 'network_node_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_edgeprop',
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_edgeprop_table(&$schema) {
  $schema['network_edgeprop'] = [
    'table' => 'network_edgeprop',
    'fields' => [
      'network_edgeprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_edge_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_edgeprop_id',
    ],
    'unique keys' => [
      'network_edgeprop_c1' => [
        0 => 'network_edge_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_edgeprop_idx1' => [
        0 => 'network_edge_id',
      ],
      'network_edgeprop_idx2' => [
        0 => 'type_id',
      ],
      'network_edgeprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'network_edge' => [
        'table' => 'network_edge',
        'columns' => [
          'network_edge_id' => 'network_edge_id',
        ],
      ],
    ],
  ];
}


/**
 *
 */
function tripal_network_add_network_cvterm_table(&$schema) {

  $schema['network_cvterm'] = [
    'table' => 'network_cvterm',
    'fields' => [
      'network_cvterm_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'cvterm_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'is_not' => [
        'type' => 'int',
        'size' => 'tiny',
        'pgsql_type' => 'boolean',
        'not null' => TRUE,
        'default' => 'false',
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_cvterm_id',
    ],
    'unique keys' => [
      'network_cvterm_c1' => [
        0 => 'network_id',
        1 => 'cvterm_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_cvterm_idx1' => ['network_id'],
      'network_cvterm_idx2' => ['cvterm_id'],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'cvterm_id' => 'cvterm_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];

}
/**
 *
 */
function tripal_network_add_network_cvtermprop_table(&$schema) {
  $schema['networkmod_cvtermprop'] = [
    'table' => 'networkmod_cvtermprop',
    'fields' => [
      'networkmod_cvtermprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'networkmod_cvterm_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'networkmod_cvtermprop_id',
    ],
    'unique keys' => [
      'networkmod_cvtermprop_c1' => [
        0 => 'networkmod_cvterm_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'networkmod_cvtermprop_idx1' => [
        0 => 'networkmod_cvterm_id',
      ],
      'networkmod_cvtermprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'networkmod_cvterm' => [
        'table' => 'networkmod_cvterm',
        'columns' => [
          'networkmod_cvterm_id' => 'networkmod_cvterm_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_file_table(&$schema) {
  $schema['network_file'] = [
    'table' => 'network_file',
    'fields' => [
      'network_file_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'file_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ],
    ],
    'primary key' => ['network_file_id'],
    'unique keys' => [
      'network_file_c1' => ['file_id', 'network_id'],
    ],
    'indexes' => [
      'network_file_idx1' => ['file_id'],
      'network_file_idx2' => ['network_id'],
    ],
    'foreign keys' => [
      'file' => [
        'table' => 'file',
        'columns' => [
          'file_id' => 'file_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_analysis_table(&$schema) {

  $schema['network_analysis'] = [
    'table' => 'network_analysis',
    'fields' => [
      'network_analysis_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'analysis_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      0 => 'network_analysis_id',
    ],
    'unique keys' => [
      'network_analysis_c1' => [
        0 => 'network_id',
        1 => 'analysis_id',
      ],
    ],
    'indexes' => [
      'network_analysis_idx1' => [
        0 => 'network_id',
      ],
      'network_analysis_idx2' => [
        0 => 'analysis_id',
      ],
    ],
    'foreign keys' => [
      'analysis' => [
        'table' => 'analysis',
        'columns' => [
          'analysis_id' => 'analysis_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_analysisprop',
    ],
  ];
}

/**
 *
 */
function tripal_network_add_network_pub_table(&$schema) {

  $schema['network_pub'] = [
    'table' => 'network_pub',
    'fields' => [
      'network_pub_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'pub_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      0 => 'network_pub_id',
    ],
    'unique keys' => [
      'network_pub_c1' => [
        0 => 'network_id',
        1 => 'pub_id',
      ],
    ],
    'indexes' => [
      'network_pub_idx1' => [
        0 => 'network_id',
      ],
      'network_pub_idx2' => [
        0 => 'pub_id',
      ],
    ],
    'foreign keys' => [
      'pub' => [
        'table' => 'pub',
        'columns' => [
          'pub_id' => 'pub_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}


/**
 *
 */
function tripal_network_add_network_analysisprop_table(&$schema) {
  $schema['network_analysisprop'] = [
    'table' => 'network_analysisprop',
    'fields' => [
      'network_analysisprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_analysis_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_analysisprop_id',
    ],
    'unique keys' => [
      'network_analysisprop_c1' => [
        0 => 'network_analysis_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_analysisprop_idx1' => [
        0 => 'network_analysis_id',
      ],
      'network_analysisprop_idx2' => [
        0 => 'type_id',
      ],
      'network_analysisprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'network_analysis' => [
        'table' => 'network_analysis',
        'columns' => [
          'network_analysis_id' => 'network_analysis_id',
        ],
      ],
    ],
    'referring_tables' => NULL,
  ];
}



/**
 *
 */
function tripal_network_add_compound_table(&$schema) {
  
  $schema['compound'] = [
    'table' => 'compound',
    'fields' => [
      'compound_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text',
      ],
      'uniquename' => [
        'type' => 'text',
      ],
    ],
    'primary key' => ['compound_id'],
    'indexes' => [
      'compound_name_ind1' => [
        0 => 'name',
      ],
    ],
    'unique keys' => [
      'pathway_c1' => [
        1 => 'name',
      ],
    ],
    'referring_tables' => [
      'compoundprop',
      'compound_dbxref',
      'compound_synonym'
    ],
  ];
}


/**
 *
 */
function tripal_network_add_compoundprop_table(&$schema) {
  
  $schema['compoundprop'] = [
    'table' => 'compoundprop',
    'fields' => [
      'compoundprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'compoundprop_id',
    ],
    'unique keys' => [
      'compoundprop_c1' => [
        0 => 'compound_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'compoundprop_idx1' => [
        0 => 'compound_id',
      ],
      'compoundprop_idx2' => [
        0 => 'type_id',
      ],
      'compoundprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
    ],
  ];
}

function tripal_network_add_compound_dbxref_table(&$schema) {
  
  $schema['compound_dbxref'] = [
    'table' => 'compound_dbxref',
    'fields' => [
      'compound_dbxref_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'dbxref_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'is_current' => [
        'size' => 'tiny',
        'type' => 'boolean',
        'pgsql_type' => 'boolean',
        'not null' => TRUE,
        'default' => 'false',
      ],
    ],
    'unique keys' => [
      'compound_dbxref_c1' => [
        0 => 'compound_id',
        1 => 'dbxref_id',
      ],
    ],
    'indexes' => [
      'compound_dbxref_idx1' => [
        0 => 'compound_id',
      ],
      'compound_dbxref_idx2' => [
        0 => 'dbxref_id',
      ],
    ],
    'primary key' => [
      0 => 'compound_dbxref_id',
    ],
    'foreign keys' => [
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
      'dbxref' => [
        'table' => 'dbxref',
        'columns' => [
          'dbxref_id' => 'dbxref_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}

function tripal_network_add_compound_synonymn_table(&$schema) {
  
  $schema['compound_synonym'] = [
    'description' => '',
    'table' => 'compound_synonym',
    'fields' => [
      'compound_synonym_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'synonym_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'pub_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'is_current' => [
        'size' => 'tiny',
        'type' => 'boolean',
        'pgsql_type' => 'boolean',
        'not null' => TRUE,
        'default' => 'false',
      ],
      'is_internal' => [
        'size' => 'tiny',
        'type' => 'boolean',
        'pgsql_type' => 'boolean',
        'not null' => TRUE,
        'default' => 'false',
      ],
    ],
    'unique keys' => [
      'feature_synonym_c1' => [
        0 => 'synonym_id',
        1 => 'compound_id',
        2 => 'pub_id',
      ],
    ],
    'indexes' => [
      'compound_synonym_idx1' => [
        0 => 'synonym_id',
      ],
      'compound_synonym_idx2' => [
        0 => 'compound_id',
      ],
      'compound_synonym_idx3' => [
        0 => 'pub_id',
      ],
    ],
    'primary key' => [
      0 => 'compound_synonym_id',
    ],
    'foreign keys' => [
      'synonym' => [
        'table' => 'synonym',
        'columns' => [
          'synonym_id' => 'synonym_id',
        ],
      ],
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
      'pub' => [
        'table' => 'pub',
        'columns' => [
          'pub_id' => 'pub_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}

/**
 *
 */
function tripal_network_add_reaction_table(&$schema) {
  
  $schema['reaction'] = [
    'table' => 'reaction',
    'fields' => [
      'reaction_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text',
      ],
      'definition' => [
        'type' => 'text',
      ],
      'enzyme_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
    ],
    'primary key' => ['reaction_id'],
    'indexes' => [
      'reaction_idx1' => [
        0 => 'name',
      ],
    ],
    'unique keys' => [
      'reaction_c1' => [
        0 => 'name',
      ],
    ],
    'foreign keys' => [
      'feature' => [
        'table' => 'feature',
        'columns' => [
          'enzyme_id' => 'feature_id',
        ],
      ],
    ],
    'referring_tables' => [
      'reactionprop',
      'reaction_substrate',
      'reaction_product'
    ],
  ];
}

/**
 *
 */
function tripal_network_add_reactionprop_table(&$schema) {
  
  $schema['reactionprop'] = [
    'table' => 'reactionprop',
    'fields' => [
      'reactionprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'reaction_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'reactionprop_id',
    ],
    'unique keys' => [
      'reactionprop_c1' => [
        0 => 'reaction_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'reactionprop_idx1' => [
        0 => 'reaction_id',
      ],
      'reactionprop_idx2' => [
        0 => 'type_id',
      ],
      'reactionprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'reaction' => [
        'table' => 'reaction',
        'columns' => [
          'reaction_id' => 'reaction_id',
        ],
      ],
    ],
  ];
}

/**
 *
 */
function tripal_network_add_reaction_substrate_table(&$schema) {
  
  $schema['reaction_substrate'] = [
    'table' => 'reaction_substrate',
    'fields' => [
      'reaction_substrate_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'reaction_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'quantity' => [
        'size' => 'normal',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ],
      'rank' => [
        'size' => 'normal',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['reaction_substrate_id'],
    'indexes' => [
      'reaction_substrate_idx1' => [
        0 => 'reaction_id',
      ],
      'reaction_substrate_idx2' => [
        0 => 'compound_id',
      ],
    ],
    'unique keys' => [
      'pathway_c1' => [
        0 => 'reaction_id',
        1 => 'compound_id',
      ],
    ],
    'foreign keys' => [
      'reaction' => [
        'table' => 'reaction',
        'columns' => [
          'reaction_id' => 'reaction_id',
        ],
      ],
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}
/**
 *
 */
function tripal_network_add_reaction_product_table(&$schema) {
  
  $schema['reaction_product'] = [
    'table' => 'reaction_product',
    'fields' => [
      'reaction_product_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'reaction_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'compound_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'quantity' => [
        'size' => 'normal',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ],
      'rank' => [
        'size' => 'normal',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['reaction_product_id'],
    'indexes' => [
      'reaction_product_idx1' => [
        0 => 'reaction_id',
      ],
      'reaction_product_idx2' => [
        0 => 'compound_id',
      ],
    ],
    'unique keys' => [
      'pathway_c1' => [
        0 => 'reaction_id',
        1 => 'compound_id',
      ],
    ],
    'foreign keys' => [
      'reaction' => [
        'table' => 'reaction',
        'columns' => [
          'reaction_id' => 'reaction_id',
        ],
      ],
      'compound' => [
        'table' => 'compound',
        'columns' => [
          'compound_id' => 'compound_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}
/**
 *
 */
function tripal_network_add_pathway_table(&$schema) {
  
  $schema['pathway'] = [
    'table' => 'pathway',
    'fields' => [
      'pathway_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE
      ],
      'uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text',
      ],
      'description' => [
        'type' => 'text',
      ],
      'organism_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE
      ],
      'dbxref_id' => [
        'size' => 'big',
        'type' => 'int',
        'description' => 'An optional primary public stable identifier for this feature. Secondary identifiers and external dbxrefs go in the table feature_dbxref.'
      ],
    ],
    'primary key' => ['pathway_id'],
    'indexes' => [
      'pathway_idx1' => [
        0 => 'organism_id',
      ],
      'pathway_idx2' => [
        0 => 'uniquename',
      ],
      'pathway_idx3' => [
        0 => 'name',
      ],
    ],
    'unique keys' => [
      'pathway_c1' => [
        0 => 'organism_id',
        1 => 'uniquename',
      ],
    ],
    'foreign keys' => [
      'organism' => [
        'table' => 'organism',
        'columns' => [
          'organism_id' => 'organism_id',
        ],
      ],
    ],
    'referring_tables' => [
      'pathwayprop',
      'pathway_dbxref',
      'pathway_feature',
      'pathway_compound',
      'pathway_reaction'
    ],
  ];
}

/**
 *
 */
function tripal_network_add_pathwayprop_table(&$schema) {
  
  $schema['pathwayprop'] = [
    'table' => 'pathwayprop',
    'fields' => [
      'pathwayprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'pathway_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'value_num' => [
        'type' => 'float',
        'not null' => FALSE,
      ],
      'value_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'pathwayprop_id',
    ],
    'unique keys' => [
      'pathwayprop_c1' => [
        0 => 'pathway_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'pathwayprop_idx1' => [
        0 => 'pathway_id',
      ],
      'pathwayprop_idx2' => [
        0 => 'type_id',
      ],
      'pathwayprop_idx3' => [
        0 => 'value_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
          'value_id' => 'cvterm_id',
        ],
      ],
      'pathway' => [
        'table' => 'pathway',
        'columns' => [
          'pathway_id' => 'pathway_id',
        ],
      ],
    ],
  ];
}

/**
 *
 */
function tripal_network_add_pathway_dbxref_table(&$schema) {
  
  $schema['pathway_dbxref'] = [
    'table' => 'pathway_dbxref',
    'fields' => [
      'pathway_dbxref_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'pathway_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'dbxref_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'is_current' => [
        'size' => 'tiny',
        'type' => 'boolean',
        'pgsql_type' => 'boolean',
        'not null' => TRUE,
        'default' => 'false',
      ],
    ],
    'unique keys' => [
      'pathway_dbxref_c1' => [
        0 => 'pathway_id',
        1 => 'dbxref_id',
      ],
    ],
    'indexes' => [
      'pathway_dbxref_idx1' => [
        0 => 'pathway_id',
      ],
      'pathway_dbxref_idx2' => [
        0 => 'dbxref_id',
      ],
    ],
    'primary key' => [
      0 => 'pathway_dbxref_id',
    ],
    'foreign keys' => [
      'pathway' => [
        'table' => 'pathway',
        'columns' => [
          'pathway_id' => 'pathway_id',
        ],
      ],
      'dbxref' => [
        'table' => 'dbxref',
        'columns' => [
          'dbxref_id' => 'dbxref_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}

/**
 *
 */
function tripal_network_add_pathway_feature_table(&$schema) {
  
  $schema['pathway_feature'] = [
    'description' => '',
    'table' => 'pathway_feature',
    'fields' => [
      'pathway_feature_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'pathway_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'For linking genes, proteins ane enzymes to a pathway'
      ],
    ],
    'unique keys' => [
      'pathway_feature_c1' => [
        0 => 'pathway_id',
        1 => 'feature_id',
      ],
    ],
    'indexes' => [
      'pathway_feature_idx1' => [
        0 => 'pathway_id',
      ],
      'pathway_feature_idx2' => [
        0 => 'feature_id',
      ],
    ],
    'primary key' => [
      0 => 'pathway_feature_id',
    ],
    'foreign keys' => [
      'pathway' => [
        'table' => 'pathway',
        'columns' => [
          'pathway_id' => 'pathway_id',
        ],
      ],
      'feature' => [
        'table' => 'feature',
        'columns' => [
          'feature_id' => 'feature_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'pathway_featureprop',
    ],
  ];
}

function tripal_network_add_pathway_reaction_table(&$schema) {
  
  $schema['pathway_feature'] = [
    'description' => '',
    'table' => 'pathway_reaction',
    'fields' => [
      'pathway_reaction_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'pathway_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'reaction_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'unique keys' => [
      'pathway_feature_c1' => [
        0 => 'pathway_id',
        1 => 'reaction_id',
      ],
    ],
    'indexes' => [
      'pathway_feature_idx1' => [
        0 => 'pathway_id',
      ],
      'pathway_feature_idx2' => [
        0 => 'reaction_id',
      ],
    ],
    'primary key' => [
      0 => 'pathway_reaction_id',
    ],
    'foreign keys' => [
      'pathway' => [
        'table' => 'pathway',
        'columns' => [
          'pathway_id' => 'pathway_id',
        ],
      ],
      'reaction' => [
        'table' => 'reaction',
        'columns' => [
          'reaction_id' => 'reaction_id',
        ],
      ],
    ],
    'referring_tables' => [
    ],
  ];
}
