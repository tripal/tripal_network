<?php

/**
 *
 */
function tripal_network_install() {

  // Add the new Chado tables.
  $schema = [];

  tripal_network_add_network_table($schema);
  tripal_network_add_networkprop_table($schema);

  tripal_network_add_network_node_table($schema);
  tripal_network_add_network_nodeprop_table($schema);

  tripal_network_add_network_edge_table($schema);
  tripal_network_add_network_edgeprop_table($schema);

  //tripal_network_add_network_relationship_table($custom_tables);
  //tripal_network_add_network_cvterm_table($custom_tables);
  //tripal_network_add_network_cvtermprop_table($custom_tables);
  tripal_network_add_network_analysis_table($schema);
  tripal_network_add_network_analysisprop_table($schema);
  tripal_network_add_network_pub_table($schema);


  foreach ($schema as $table_name => $table_schema){
    chado_create_custom_table($table_name, $table_schema, TRUE, NULL, FALSE);
  }

  tripal_network_add_terms();
  tripal_network_setup_semweb();
  tripal_network_add_content_types();
}

/**
 *
 */
function tripal_network_add_terms() {
  tripal_insert_db([
    'name' => 'NCIT',
    'description' => 'NCI Thesaurus OBO Edition',
    'url' => 'https://github.com/NCI-Thesaurus/thesaurus-obo-edition',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('NCIT','The NCIt OBO Edition project aims to increase integration of the NCIt with OBO Library ontologies. NCIt is a reference terminology that includes broad coverage of the cancer domain, including cancer related diseases, findings and abnormalities. NCIt OBO Edition releases should be considered experimental.');

  tripal_insert_db([
    'name' => 'XCO',
    'description' => 'Experimental condition ontology',
    'url' => 'http://purl.obolibrary.org/obo/xco.owl',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('XCO','Conditions under which physiological and morphological measurements are made both in the clinic and in studies involving humans or model organisms.');


  tripal_insert_db([
    'name' => 'INO',
    'description' => 'INO: Interaction Network Ontology',
    'url' => 'https://github.com/INO-ontology/ino',
    'urlprefix' => 'http://purl.obolibrary.org/obo/{db}_{accession}',
  ]);
  tripal_insert_cv('INO','The Interaction Network Ontology (INO) is an ontology in the domain of interactions and interaction networks. INO represents general and species-neutral types of interactions and interaction networks, and their related elements and relations. INO is a community-driven ontology, aligns with BFO, and is developed by following the OBO Foundry principles.');


  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C61377',
    'name' => 'Network',
    'cv_name' => 'NCIT',
    'definition' => 'An interconnected system of things or people.',
  ]);

  // Network Parts
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C75907',
    'name' => 'Graph Node',
    'cv_name' => 'NCIT',
    'definition' => 'One of the points that define a graph.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C75923',
    'name' => 'Graph Edge',
    'cv_name' => 'NCIT',
    'definition' => 'A connection between nodes in a graph.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C43418',
    'name' => 'Cluster',
    'cv_name' => 'NCIT',
    'definition' => 'A grouping of a number of similar things.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'OBI:0200126',
    'name' => 'network graph construction',
    'cv_name' => 'obi',
    'definition' => 'A network analysis in which an input data set describing objects and relationships between objects is transformed into an output representation of these objects as nodes and the relationships as edges of a network graph.',
  ]);

  // Analysis  Types
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C63918',
    'name' => 'Cluster Analysis',
    'cv_name' => 'NCIT',
    'definition' => 'Methods for grouping objects into subsets such that those within each cluster are more closely related to one another than objects assigned to different clusters. [ NCI ]',
  ]);

  //
  // Add terms for KINC GraphML properties.
  //
  $term = tripal_insert_cvterm([
    'id' => 'SWO:0000425',
    'name' => 'Similarity score',
    'cv_name' => 'SWO',
    'definition' => 'Similarity score',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C44185',
    'name' => 'P-Value',
    'cv_name' => 'NCIT',
    'definition' => 'A measure of the probability that a result happened by chance. The lower the p-value, the more likely it is that the result was caused by phenomenon of interest. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C85542',
    'name' => 'R Squared',
    'cv_name' => 'NCIT',
    'definition' => 'The goodness of fit statistic for the terminal elimination phase. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'XCO:0000000',
    'name' => 'experimental condition',
    'cv_name' => 'XCO',
    'definition' => 'A state of being, an external or environmental factor or a treatment observed or administered prior to or concurrent with an investigative procedure such as an assessment of a morphological or physiological state or property in a single individual or sample or in a group of individuals or samples, especially a state, factor or treatment which has the potential to influence the outcome of such an assessment. [ Multiple_Dictionaries:http://www.thefreedictionary.com/ http://www.ncbi.nlm.nih.gov/pubmed/22654893 ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'NCIT:C48904',
    'name' => 'Rank',
    'cv_name' => 'NCIT',
    'definition' => 'A relative status as compared to others within a group. [ NCI ]',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_sample_string',
    'name' => 'KINC sample string',
    'cv_name' => 'local',
    'definition' => 'A sequence of digits representing the contribution that each sample has made to a KINC derived cluster that forms an edge in the network.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_cluster_index',
    'name' => 'KINC cluster index',
    'cv_name' => 'local',
    'definition' => 'The index of the cluster identified by Gaussian Mixuture Models (GMM) when using the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_cluster_size',
    'name' => 'KINC cluster size',
    'cv_name' => 'local',
    'definition' => 'The size of the cluster identified by Gaussian Mixuture Models (GMM) when using the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_sample_string',
    'name' => 'KINC Sample String',
    'cv_name' => 'local',
    'definition' => 'A sequence of digits representing the contribution that each sample has made to a KINC derived cluster that forms an edge in the network.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_pvalue',
    'name' => 'KINC association p-value',
    'cv_name' => 'local',
    'definition' => 'The p-value obtained from the KINC software during association testing of the experimental context with the network edge.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_rsquared',
    'name' => 'KINC association r-squared',
    'cv_name' => 'local',
    'definition' => 'The R squared value obtained from the KINC software from linear regression during the assocation testing of the experimental context with the network edge.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_WAnova_Max',
    'name' => 'KINC Welch\'s one-way ANOVA maximum p-value',
    'cv_name' => 'local',
    'definition' => 'The maximum p-value obtained from the Welch\'s one-way ANOVA when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_WAnova_Min',
    'name' => 'KINC Welch\'s one-way ANOVA minimum p-value',
    'cv_name' => 'local',
    'definition' => 'The minimum p-value obtained from the Welch\'s one-way ANOVA when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_Missing_Ttest',
    'name' => 'KINC t-test of missigness p-value',
    'cv_name' => 'local',
    'definition' => 'The p-value obtained from the t-test for similar missing expression patterns when applied to both genes in the correlated pair by the KINC software.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:KINC_test_name',
    'name' => 'KINC test name',
    'cv_name' => 'local',
    'definition' => 'The name of the variable (or category) used by the KINC software for testing if an edge is associated with the variable.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'INO:0000002',
    'name' => 'interaction',
    'cv_name' => 'INO',
    'definition' => 'Interaction is a processual entity that has two or more participants (i.e., interactors) that have an effect upon one another.',
  ]);



  // Network Analysis Types
  $term = tripal_insert_cvterm([
    'id' => 'operation:3766',
    'name' => 'Weighted gene co-expression network analysis',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'A data mining method typically used for studying biological networks based on pairwise correlations between variables.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'operation:3094',
    'name' => 'Protein interaction network prediction',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'Predict a network of protein interactions.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'operation:2437',
    'name' => 'Gene regulatory network prediction',
    'cv_name' => 'EDAM',
    'db_name' => 'operation',
    'definition' => 'Predict a network of gene regulation.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:csGCN',
    'name' => 'Context-specific gene co-expression network',
    'cv_name' => 'local',
    'definition' => 'An approach for creating gene co-expression network using context.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:GCN',
    'name' => 'Gene co-expression network.',
    'cv_name' => 'local',
    'definition' => 'Pairwise correlation of gene expression, thresholded, in network form.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'local:MCN',
    'name' => 'Metabolite correlation network.',
    'cv_name' => 'local',
    'definition' => 'Pairwise correlation of metabolite abundance, thresholded, in network form.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'OBI:0200130',
    'name' => 'node degree calculation',
    'cv_name' => 'obi',
    'definition' => 'A node quality calculation in which an input data set describing object nodes and relationship edges between object nodes is used to enumerate the number of unique relationships of an individual object node.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000400',
    'name' => 'x cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An x cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000401',
    'name' => 'y cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An y cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000402',
    'name' => 'z cartesian coordinate',
    'cv_name' => 'SIO',
    'definition' => 'An z cartesian coordinate is the coordinate of an object onto the x-axis of a cartesian coordinate system.',
  ]);


  // Terms for fields
  $term = tripal_insert_cvterm([
    'id' => 'SIO:000931',
    'name' => 'network diagram',
    'cv_name' => 'SIO',
    'definition' => 'A network diagram consists of a set of vertices connected by edges.',
  ]);


  // Set default property terms
  variable_set('tripal_network_graphml_mapper', [
    'g_name' => 'schema:name',
    'v_name' => 'schema:name',
    'v_degree' => 'OBI:0200130',
    'v_x' => 'SIO:000400',
    'v_y' => 'SIO:000401',
    'v_z' => 'SIO:000402',
    'e_Similarity_Score' => 'SWO:0000425',
    'e_Interaction' =>  'INO:0000002',
    'e_Cluster_Index' => 'local:KINC_cluster_index',
    'e_Cluster_Size' => 'local:KINC_cluster_size',
    'e_Samples' => 'local:KINC_sample_string',
    'e_Test_Name' => 'local:KINC_test_name',
    'e_p_value' => 'local:KINC_pvalue',
    'e_r_squared' => 'local:KINC_rsquared',
    'e_rank' => 'NCIT:C48904',
    'e_WAnova_Max' => 'local:KINC_WAnova_Max',
    'e_WAnova_Min'  => 'local:KINC_WAnova_Min',
    'e_MissingTtest' => 'local:KINC_Missing_Ttest',
  ]);

}

/**
 *
 */
function tripal_network_setup_semweb() {

  // Add controlled vocabulary terms to the new tables.
  $identifier = tripal_get_cvterm(['id' => 'data:0842']);
  tripal_associate_chado_semweb_term('network', 'uniquename', $identifier);

  $name = tripal_get_cvterm(['id' => 'schema:name']);
  tripal_associate_chado_semweb_term('network', 'name', $name);

  $organism = tripal_get_cvterm(['id' => 'OBI:0100026']);
  tripal_associate_chado_semweb_term('network', 'organism_id', $organism);

  $type = tripal_get_cvterm(['id' => 'schema:additionalType']);
  tripal_associate_chado_semweb_term('network', 'type_id', $type);


}
/**
 *
 * @throws Exception
 */
function tripal_network_add_content_types() {
  // Create the 'Network diagram' entity type.
  $error = '';
  $args = [
    'vocabulary' => 'NCIT',
    'accession' => 'C61377',
    'term_name' => 'Network',
    'storage_args' => [
      'data_table' => 'network',
    ]
  ];
  $term = tripal_load_term_entity(['vocabulary' => 'NCIT', 'accession' => 'C61377']);
  if ($term) {
    $bundle = tripal_load_bundle_entity(['term_id' => $term->id]);
  }
  if (!$term or !$bundle) {
    if (!tripal_create_bundle($args, $error)) {
      $msg = (isset($error['!message'])) ? $error['!message'] : 'Error Encountered creating "Network" Tripal Content Type.';
      throw new Exception($msg);
    }
  }
}

/**
 *
 */
function tripal_network_add_network_table(&$schema) {

  $schema['network'] = [
    'table' => 'network',
    'fields' => [
      'network_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ],
      'name' => [
        'type' => 'text',
      ],
      'organism_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['network_id'],
    'indexes' => [
      'network_idx1' => [
        0 => 'organism_id',
      ],
      'network_idx2' => [
        0 => 'type_id',
      ],
      'network_idx4' => [
        0 => 'uniquename',
      ],
      'network_name_ind1' => [
        0 => 'name',
      ],
    ],
    'unique keys' => [
      'network_c1' => [
        0 => 'organism_id',
        1 => 'uniquename',
        2 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'organism' => [
        'table' => 'organism',
        'columns' => [
          'organism_id' => 'organism_id',
        ],
      ],
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
    ],
    'referring_tables' => [
      'network_relationship',
      'network_edge',
      'network_node',
      'networkprop'
    ],
  ];
}
/**
 *
 */
function tripal_network_add_networkprop_table(&$schema) {

  $schema['networkprop'] = [
    'table' => 'networkprop',
    'fields' => [
      'networkprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'networkprop_id',
    ],
    'unique keys' => [
      'networkprop_c1' => [
        0 => 'network_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'networkprop_idx1' => [
        0 => 'network_id',
      ],
      'networkprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_node_table(&$schema) {

  $schema['network_node'] = [
    'table' => 'network_node',
    'fields' => [
      'network_node_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
    ],
    'primary key' => ['network_node_id'],
    'indexes' => [
      'network_node_idx1' => [
        0 => 'network_id',
      ],
      'network_node_idx2' => [
        0 => 'feature_id',
      ],
      'network_node_idx3' => [
        0 => 'network_id',
        1 => 'feature_id',
      ],
    ],
    'unique keys' => [
      'network_node_c1' => [
        0 => 'network_id',
        1 => 'feature_id',
      ],
    ],
    'foreign keys' => [
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
      'feature' => [
        'table' => 'feature',
        'columns' => [
          'feature_id' => 'feature_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_nodeprop',
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_nodeprop_table(&$schema) {
  $schema['network_nodeprop'] = [
    'table' => 'network_nodeprop',
    'fields' => [
      'network_nodeprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_node_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_nodeprop_id',
    ],
    'unique keys' => [
      'network_nodeprop_c1' => [
        0 => 'network_node_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_nodeprop_idx1' => [
        0 => 'network_node_id',
      ],
      'network_nodeprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'network_node_id' => 'network_node_id',
        ],
      ],
    ],
  ];
}

/**
 *
 */
function tripal_network_add_network_edge_table(&$schema) {
  $schema['network_edge'] = [
    'table' => 'network_edge',
    'fields' => [
      'network_edge_id' => [
        'size' => 'big',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'source_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
      'target_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE
      ],
    ],
    'primary key' => ['network_edge_id'],
    'indexes' => [
      'network_edge_idx1' => [
        0 => 'network_id',
      ],
      'network_edge_idx2' => [
        0 => 'source_id',
      ],
      'network_edge_idx3' => [
        0 => 'target_id',
      ],
      'network_edge_idx4' => [
        0 => 'source_id',
        1 => 'target_id',
      ],
      'network_edge_idx5' => [
        0 => 'network_id',
        1 => 'source_id',
        2 => 'target_id',
      ],
    ],
    'foreign keys' => [
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
      'network_node' => [
        'table' => 'network_node',
        'columns' => [
          'source_id' => 'network_node_id',
          'target_id' => 'network_node_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_edgeprop',
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_edgeprop_table(&$schema) {
  $schema['network_edgeprop'] = [
    'table' => 'network_edgeprop',
    'fields' => [
      'network_edgeprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_edge_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_edgeprop_id',
    ],
    'unique keys' => [
      'network_edgeprop_c1' => [
        0 => 'network_edge_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_edgeprop_idx1' => [
        0 => 'network_edge_id',
      ],
      'network_edgeprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'network_edge' => [
        'table' => 'network_edge',
        'columns' => [
          'network_edge_id' => 'network_edge_id',
        ],
      ],
    ],
  ];
}



/**
 *
 */
function tripal_network_add_network_relationship_table(&$schema) {

  $schema['network_relationship'] = [
    'table' => 'network_relationship',
    'fields' => [
      'network_relationship_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'subject_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'object_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_relationship_id',
    ],
    'unique keys' => [
      'network_relationship_c1' => [
        0 => 'subject_id',
        1 => 'object_id',
        2 => 'type_id',
        3 => 'rank',
      ],
    ],
    'indexes' => [
      'network_relationship_idx1' => [
        0 => 'subject_id',
      ],
      'network_relationship_idx2' => [
        0 => 'type_id',
      ],
      'network_relationship_idx3' => [
        0 => 'object_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'subject_id' => 'network_id',
          'object_id' => 'network_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_cvterm_table(&$schema) {

  $schema['network_cvterm'] = [
    'table' => 'network_cvterm',
    'fields' => [
      'network_cvterm_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'cvterm_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'analysis_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'is_not' => [
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_cvterm_id',
    ],
    'unique keys' => [
      'network_cvterm_c1' => [
        0 => 'network_id',
        1 => 'cvterm_id',
        2 => 'analysis_id',
        3 => 'rank',
      ],
    ],
    'indexes' => [
      'network_cvterm_idx1' => ['network_id'],
      'network_cvterm_idx2' => ['cvterm_id'],
      'network_cvterm_idx3' => ['analysis_id'],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'cvterm_id' => 'cvterm_id',
        ],
      ],
      'analysis' => [
        'table' => 'analysis',
        'columns' => [
          'analysis_id' => 'analysis_id',
        ],
      ],
      'networkmod' => [
        'table' => 'networkmod',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_cvtermprop',
    ],
  ];

}
/**
 *
 */
function tripal_network_add_network_cvtermprop_table(&$schema) {
  $schema['networkmod_cvtermprop'] = [
    'table' => 'networkmod_cvtermprop',
    'fields' => [
      'networkmod_cvtermprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'networkmod_cvterm_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'networkmod_cvtermprop_id',
    ],
    'unique keys' => [
      'networkmod_cvtermprop_c1' => [
        0 => 'networkmod_cvterm_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'networkmod_cvtermprop_idx1' => [
        0 => 'networkmod_cvterm_id',
      ],
      'networkmod_cvtermprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'networkmod_cvterm' => [
        'table' => 'networkmod_cvterm',
        'columns' => [
          'networkmod_cvterm_id' => 'networkmod_cvterm_id',
        ],
      ],
    ],
  ];
}
/**
 *
 */
function tripal_network_add_network_analysis_table(&$schema) {

  $schema['network_analysis'] = [
    'table' => 'network_analysis',
    'fields' => [
      'network_analysis_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'analysis_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      0 => 'network_analysis_id',
    ],
    'unique keys' => [
      'network_analysis_c1' => [
        0 => 'network_id',
        1 => 'analysis_id',
      ],
    ],
    'indexes' => [
      'network_analysis_idx1' => [
        0 => 'network_id',
      ],
      'network_analysis_idx2' => [
        0 => 'analysis_id',
      ],
    ],
    'foreign keys' => [
      'analysis' => [
        'table' => 'analysis',
        'columns' => [
          'analysis_id' => 'analysis_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
    'referring_tables' => [
      0 => 'network_analysisprop',
    ],
  ];
}

/**
 *
 */
function tripal_network_add_network_pub_table(&$schema) {

  $schema['network_pub'] = [
    'table' => 'network_pub',
    'fields' => [
      'network_pub_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'pub_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      0 => 'network_pub_id',
    ],
    'unique keys' => [
      'network_pub_c1' => [
        0 => 'network_id',
        1 => 'pub_id',
      ],
    ],
    'indexes' => [
      'network_pub_idx1' => [
        0 => 'network_id',
      ],
      'network_pub_idx2' => [
        0 => 'pub_id',
      ],
    ],
    'foreign keys' => [
      'pub' => [
        'table' => 'pub',
        'columns' => [
          'pub_id' => 'pub_id',
        ],
      ],
      'network' => [
        'table' => 'network',
        'columns' => [
          'network_id' => 'network_id',
        ],
      ],
    ],
  ];
}


/**
 *
 */
function tripal_network_add_network_analysisprop_table(&$schema) {
  $schema['network_analysisprop'] = [
    'table' => 'network_analysisprop',
    'fields' => [
      'network_analysisprop_id' => [
        'size' => 'big',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'network_analysis_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'type_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'value' => [
        'type' => 'text',
        'not null' => FALSE,
      ],
      'rank' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      0 => 'network_analysisprop_id',
    ],
    'unique keys' => [
      'network_analysisprop_c1' => [
        0 => 'network_analysis_id',
        1 => 'type_id',
        2 => 'rank',
      ],
    ],
    'indexes' => [
      'network_analysisprop_idx1' => [
        0 => 'network_analysis_id',
      ],
      'network_analysisprop_idx2' => [
        0 => 'type_id',
      ],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'type_id' => 'cvterm_id',
        ],
      ],
      'network_analysis' => [
        'table' => 'network_analysis',
        'columns' => [
          'network_analysis_id' => 'network_analysis_id',
        ],
      ],
    ],
    'referring_tables' => NULL,
  ];
}


